name: CI/CD - Flask Docker Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (for deploy files)
        # חובה לבצע checkout גם כאן כדי שיהיה גישה לקבצי ה-YAML להעתקה
        uses: actions/checkout@v4

      - name: Install SSH client and rsync
        run: sudo apt-get update && sudo apt-get install -y openssh-client rsync

      - name: Start SSH agent and add key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.AWS_PRIVATE_KEY }}
      - name: Sync All Project Files 🚀
        run: |
         ssh -o StrictHostKeyChecking=no "${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}" 'mkdir -p ~/app'
         rsync -avz --exclude '.git' -e "ssh -o StrictHostKeyChecking=no" ./ "${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}":~/app/

      - name: Deploy to EC2 (Final Command)
        run: |
          ssh -o StrictHostKeyChecking=no "${{ secrets.AWS_USERNAME }}@${{ secrets.AWS_HOST }}" << 'EOF'
            
            # 1. מעבר לתיקייה הנכונה, שבה הקובץ כעת נמצא
            cd ~/app || exit 1 
            
            # 2. כניסה ל-Docker Hub בשרת (אם נדרש)
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            
            # 3. משיכת התמונה החדשה (עם sudo)
            sudo docker-compose pull
            
            # 4. הפעלה מחדש של הקונטיינרים (עם sudo ו-force-recreate)
            sudo docker-compose up -d --force-recreate
            
            echo "✅ Deployment completed on EC2"
          EOF
